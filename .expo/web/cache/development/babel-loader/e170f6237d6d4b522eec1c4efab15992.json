{"ast":null,"code":"'use strict';\n\nimport Linking from \"react-native-web/dist/exports/Linking\";\n\nvar Supported = function Supported(url) {\n  return Linking.canOpenURL(url);\n};\n\nvar Open = function Open(url) {\n  return Linking.openURL(url);\n};\n\nvar Launch = function Launch(url) {\n  return new Promise(function (resolve, reject) {\n    Supported(url).then(function (supported) {\n      if (supported) {\n        return Open(url);\n      }\n\n      reject();\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n};\n\nvar LaunchString = function LaunchString(name, url) {\n  return new Promise(function (resolve, reject) {\n    if (!_.isString(name)) reject('The provided ' + name + ' must be a string');\n    Launch(url).then(function () {\n      return resolve();\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\n\nexport { Launch, LaunchString, Supported, Open };","map":{"version":3,"sources":["E:/Development/React/petsbazar/node_modules/react-native-openanything/src/launcher.js"],"names":["Supported","url","Linking","canOpenURL","Open","openURL","Launch","Promise","resolve","reject","then","supported","catch","error","LaunchString","name","_","isString"],"mappings":"AAAA;;;;AAcA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAClB;AACI,SAAOC,OAAO,CAACC,UAAR,CAAmBF,GAAnB,CAAP;AACH,CAHD;;AAYA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACH,GAAD,EACb;AACI,SAAOC,OAAO,CAACG,OAAR,CAAgBJ,GAAhB,CAAP;AACH,CAHD;;AAWA,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACL,GAAD,EACf;AACI,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpCT,IAAAA,SAAS,CAACC,GAAD,CAAT,CAAeS,IAAf,CAAoB,UAAAC,SAAS,EAAI;AAC7B,UAAIA,SAAJ,EAAe;AACX,eAAOP,IAAI,CAACH,GAAD,CAAX;AACH;;AACDQ,MAAAA,MAAM;AACT,KALD,EAKGG,KALH,CAKS,UAACC,KAAD,EAAW;AAChBJ,MAAAA,MAAM,CAACI,KAAD,CAAN;AACH,KAPD;AAQH,GAVM,CAAP;AAWH,CAbD;;AAsBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOd,GAAP,EACrB;AACI,SAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAI,CAACO,CAAC,CAACC,QAAF,CAAWF,IAAX,CAAL,EAAuBN,MAAM,CAAC,kBAAkBM,IAAlB,GAAyB,mBAA1B,CAAN;AAEvBT,IAAAA,MAAM,CAACL,GAAD,CAAN,CAAYS,IAAZ,CAAiB;AAAA,aAAMF,OAAO,EAAb;AAAA,KAAjB,EAAkCI,KAAlC,CAAwC,UAAAC,KAAK;AAAA,aAAIJ,MAAM,CAACI,KAAD,CAAV;AAAA,KAA7C;AACH,GALM,CAAP;AAMH,CARD;;AAaA,SACIP,MADJ,EAEIQ,YAFJ,EAGId,SAHJ,EAIII,IAJJ","sourcesContent":["'use strict';\n\nimport {\n    Linking\n} from 'react-native';\n\n\n/**\n * Returns if the url is supported\n * Returns a promise\n * @example instance.supported(url).then((supported) => {...});\n * @param url\n * @returns {*}\n */\nconst Supported = (url) =>\n{\n    return Linking.canOpenURL(url);\n}\n\n/**\n * Opens the requested url\n * Returns a promise\n * @example instance.open(url).then(() => {...});\n * @param url\n * @returns {Promise}\n */\nconst Open = (url) =>\n{\n    return Linking.openURL(url);\n}\n\n\n/**\n * Launches a requested url\n * @param url\n * @returns {Promise}\n */\nconst Launch = (url) =>\n{\n    return new Promise((resolve, reject) => {\n\n        Supported(url).then(supported => {\n            if (supported) {\n                return Open(url);\n            }\n            reject();\n        }).catch((error) => {\n            reject(error);\n        });\n    });\n}\n\n\n/**\n * Launches a request url based on a string\n * param @name\n * param @url\n * @returns {Promise}\n */\nconst LaunchString = (name, url) =>\n{\n    return new Promise((resolve, reject) => {\n\n        if (!_.isString(name)) reject('The provided ' + name + ' must be a string');\n\n        Launch(url).then(() => resolve()).catch(error => reject(error));\n    });\n}\n\n/**\n * @exports\n */\nexport {\n    Launch,\n    LaunchString,\n    Supported,\n    Open\n};"]},"metadata":{},"sourceType":"module"}