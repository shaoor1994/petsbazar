{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ImagePickerExample() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      style: styles.btn,\n      onPress: pickImage,\n      children: _jsx(Text, {\n        style: styles.btnTxt,\n        children: \" Choose File\"\n      })\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  btn: {\n    margin: 15,\n    height: 35,\n    width: 120,\n    backgroundColor: '#FF642E',\n    borderRadius: 20,\n    alignSelf: 'center'\n  },\n  btnTxt: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: 'white',\n    margin: 5\n  }\n});","map":{"version":3,"sources":["E:/Development/React/petsbazar/components/CameraFunc.js"],"names":["React","useState","useEffect","ImagePicker","ImagePickerExample","image","setImage","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","styles","btn","btnTxt","width","height","StyleSheet","create","margin","backgroundColor","borderRadius","alignSelf","fontSize","fontWeight","textAlign","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,kBAA0BH,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEGJ,WAAW,CAACK,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAEN,WAAW,CAACO,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CAFH;;AAAA;AAEZC,YAAAA,MAFY;AAShBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACrBZ,cAAAA,QAAQ,CAACS,MAAM,CAACI,GAAR,CAAR;AACD;;AAbe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAgBA,SACE,MAAC,IAAD;AAAA,eAEE,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEC,MAAM,CAACC,GAAhC;AAAqC,MAAA,OAAO,EAAEd,SAA9C;AAAA,gBACA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,MAAM,CAACE,MAApB;AAAA;AAAA;AADA,MAFF,EAKGjB,KAAK,IAAI,KAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAAEc,QAAAA,GAAG,EAAEd;AAAP,OAAf;AAA+B,MAAA,KAAK,EAAE;AAAEkB,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB;AAAtC,MALZ;AAAA,IADF;AASD;AAED,IAAIJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAE3BL,EAAAA,GAAG,EAAC;AACAM,IAAAA,MAAM,EAAC,EADP;AAEAH,IAAAA,MAAM,EAAC,EAFP;AAGAD,IAAAA,KAAK,EAAC,GAHN;AAIAK,IAAAA,eAAe,EAAC,SAJhB;AAKAC,IAAAA,YAAY,EAAC,EALb;AAMAC,IAAAA,SAAS,EAAC;AANV,GAFuB;AAU3BR,EAAAA,MAAM,EAAC;AAEHS,IAAAA,QAAQ,EAAC,EAFN;AAGHC,IAAAA,UAAU,EAAC,MAHR;AAIHC,IAAAA,SAAS,EAAC,QAJP;AAKHC,IAAAA,KAAK,EAAC,OALH;AAMHP,IAAAA,MAAM,EAAC;AANJ;AAVoB,CAAlB,CAAb","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, Platform ,TouchableOpacity,Text,StyleSheet} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nexport default function ImagePickerExample() {\r\n  const [image, setImage] = useState(null);\r\n\r\n  const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View >\r\n     { /*<Button  title=\"Pick an image from camera roll\" onPress={pickImage} /> */}\r\n      <TouchableOpacity style={styles.btn} onPress={pickImage}>\r\n      <Text style={styles.btnTxt}> Choose File</Text> \r\n      </TouchableOpacity>\r\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n    </View>\r\n  );\r\n}\r\n\r\nvar styles = StyleSheet.create({\r\n\r\n    btn:{\r\n        margin:15,\r\n        height:35,\r\n        width:120,\r\n        backgroundColor:'#FF642E',\r\n        borderRadius:20,\r\n        alignSelf:'center'\r\n    },\r\n    btnTxt:{\r\n\r\n        fontSize:20,\r\n        fontWeight:'bold',\r\n        textAlign:'center',\r\n        color:'white',\r\n        margin:5\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}