{"ast":null,"code":"'use strict';\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Launch } from \"./launcher\";\nimport _ from 'lodash';\nvar ANDROID_URI = 'https://www.google.com/maps/search/?api=1&query=';\nvar IOS_URI = 'http://maps.apple.com/?q=';\n\nvar Map = function Map(address) {\n  return new Promise(function (resolve, reject) {\n    var url = '';\n\n    if (Platform.OS == 'ios') {\n      url = IOS_URI;\n    } else if (Platform.OS == 'android') {\n      url = ANDROID_URI;\n    } else {\n      reject(\"Map is not supported on this device\");\n    }\n\n    if (_.isArray(address)) {\n      if (address.length != 2) return reject(\"An map array has to contain the latitude and longitude.\");\n      address = address.join(\",\");\n    }\n\n    url += encodeURIComponent(address);\n    Launch(url).then(function () {\n      return resolve();\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\n\nexport { Map };","map":{"version":3,"sources":["E:/Development/React/petsbazar/node_modules/react-native-openanything/src/map.js"],"names":["Launch","_","ANDROID_URI","IOS_URI","Map","address","Promise","resolve","reject","url","Platform","OS","isArray","length","join","encodeURIComponent","then","catch","error"],"mappings":"AAAA;;;AAMA,SACIA,MADJ;AAIA,OAAOC,CAAP,MAAc,QAAd;AAKA,IAAMC,WAAW,GAAG,kDAApB;AAKA,IAAMC,OAAO,GAAG,2BAAhB;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,OAAD,EACZ;AACI,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIC,GAAG,GAAG,EAAV;;AAEA,QAAGC,QAAQ,CAACC,EAAT,IAAe,KAAlB,EAAyB;AACrBF,MAAAA,GAAG,GAAIN,OAAP;AACH,KAFD,MAEO,IAAIO,QAAQ,CAACC,EAAT,IAAe,SAAnB,EAA8B;AACjCF,MAAAA,GAAG,GAAGP,WAAN;AACH,KAFM,MAEA;AACHM,MAAAA,MAAM,CAAC,qCAAD,CAAN;AACH;;AAED,QAAGP,CAAC,CAACW,OAAF,CAAUP,OAAV,CAAH,EAAuB;AACnB,UAAGA,OAAO,CAACQ,MAAR,IAAkB,CAArB,EAAwB,OAAOL,MAAM,CAAC,yDAAD,CAAb;AACxBH,MAAAA,OAAO,GAAGA,OAAO,CAACS,IAAR,CAAa,GAAb,CAAV;AACH;;AAEDL,IAAAA,GAAG,IAAIM,kBAAkB,CAACV,OAAD,CAAzB;AAEAL,IAAAA,MAAM,CAACS,GAAD,CAAN,CAAYO,IAAZ,CAAiB;AAAA,aAAMT,OAAO,EAAb;AAAA,KAAjB,EAAkCU,KAAlC,CAAwC,UAAAC,KAAK;AAAA,aAAIV,MAAM,CAACU,KAAD,CAAV;AAAA,KAA7C;AACH,GApBM,CAAP;AAqBH,CAvBD;;AA6BA,SACId,GADJ","sourcesContent":["'use strict';\n\nimport {\n    Platform\n} from 'react-native';\n\nimport {\n    Launch\n} from './launcher';\n\nimport _ from 'lodash';\n\n/**\n * @type {string}\n */\nconst ANDROID_URI = 'https://www.google.com/maps/search/?api=1&query=';\n\n/**\n * @type {string}\n */\nconst IOS_URI = 'http://maps.apple.com/?q='\n\n\n/**\n * Launches a map request\n * @param address\n * @returns {Promise}\n */\nconst Map = (address) =>\n{\n    return new Promise((resolve, reject) => {\n\n        let url = '';\n\n        if(Platform.OS == 'ios') {\n            url  = IOS_URI;\n        } else if (Platform.OS == 'android') {\n            url = ANDROID_URI;\n        } else {\n            reject(\"Map is not supported on this device\");\n        }\n\n        if(_.isArray(address)) {\n            if(address.length != 2) return reject(\"An map array has to contain the latitude and longitude.\");\n            address = address.join(\",\");\n        }\n\n        url += encodeURIComponent(address);\n\n        Launch(url).then(() => resolve()).catch(error => reject(error));\n    });\n}\n\n\n/**\n * @exports\n */\nexport {\n    Map\n}"]},"metadata":{},"sourceType":"module"}