{"ast":null,"code":"'use strict';\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Launch } from \"./launcher\";\nimport _ from 'lodash';\nvar TEL = 'tel:';\nvar TELPROMPT = 'telprompt:';\n\nvar Call = function Call(phone) {\n  var prompt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return new Promise(function (resolve, reject) {\n    if (!_.isString(phone)) reject('The provided phone number must be a string');\n    var url = (Platform.OS == 'ios' && prompt ? TELPROMPT : TEL) + phone;\n    Launch(url).then(function () {\n      return resolve();\n    }).catch(function (error) {\n      if (url.includes(TELPROMPT)) {\n        return resolve();\n      }\n\n      reject(error);\n    });\n  });\n};\n\nexport { Call };","map":{"version":3,"sources":["E:/Development/React/petsbazar/node_modules/react-native-openanything/src/call.js"],"names":["Launch","_","TEL","TELPROMPT","Call","phone","prompt","Promise","resolve","reject","isString","url","Platform","OS","then","catch","error","includes"],"mappings":"AAAA;;;AAMA,SACIA,MADJ;AAIA,OAAOC,CAAP,MAAc,QAAd;AAKA,IAAMC,GAAG,GAAG,MAAZ;AAKA,IAAMC,SAAS,GAAG,YAAlB;;AAUA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EACb;AAAA,MADqBC,MACrB,uEAD8B,KAC9B;AACI,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAI,CAACR,CAAC,CAACS,QAAF,CAAWL,KAAX,CAAL,EAAwBI,MAAM,CAAC,4CAAD,CAAN;AAExB,QAAIE,GAAG,GAAG,CAAEC,QAAQ,CAACC,EAAT,IAAe,KAAf,IAAwBP,MAAzB,GAAmCH,SAAnC,GAA+CD,GAAhD,IAAuDG,KAAjE;AAEAL,IAAAA,MAAM,CAACW,GAAD,CAAN,CAAYG,IAAZ,CAAiB;AAAA,aAAMN,OAAO,EAAb;AAAA,KAAjB,EAAkCO,KAAlC,CAAwC,UAAAC,KAAK,EAAI;AAE7C,UAAIL,GAAG,CAACM,QAAJ,CAAad,SAAb,CAAJ,EAA6B;AACzB,eAAOK,OAAO,EAAd;AACH;;AAEDC,MAAAA,MAAM,CAACO,KAAD,CAAN;AACH,KAPD;AAQH,GAdM,CAAP;AAeH,CAjBD;;AAsBA,SACIZ,IADJ","sourcesContent":["'use strict';\n\nimport {\n    Platform\n} from 'react-native';\n\nimport {\n    Launch\n} from './launcher';\n\nimport _ from 'lodash';\n\n/**\n * @type {string}\n */\nconst TEL = 'tel:';\n\n/**\n * @type {string}\n */\nconst TELPROMPT = 'telprompt:';\n\n\n/**\n * Launches a call request\n * @param phone\n * @param prompt\n * @returns {Promise}\n * @constructor\n */\nconst Call = (phone, prompt = false) =>\n{\n    return new Promise((resolve, reject) => {\n\n        if (!_.isString(phone)) reject('The provided phone number must be a string');\n\n        let url = ((Platform.OS == 'ios' && prompt) ? TELPROMPT : TEL) + phone;\n\n        Launch(url).then(() => resolve()).catch(error => {\n\n            if (url.includes(TELPROMPT)) {\n                return resolve();\n            }\n\n            reject(error);\n        });\n    });\n}\n\n/**\n * @exports\n */\nexport {\n    Call\n}"]},"metadata":{},"sourceType":"module"}