{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withRouter } from \"react-router\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ImagePickerExample from \"../components/CameraFunc\";\nimport SelectDropdown from \"react-native-select-dropdown\";\nimport Constants from \"expo-constants\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport CategoryDropList from \"../constants/CategoryDropList\";\nimport CityDropList from \"../constants/CityDropList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Sellnow = function (_Component) {\n  _inherits(Sellnow, _Component);\n\n  var _super = _createSuper(Sellnow);\n\n  function Sellnow(props) {\n    var _this;\n\n    _classCallCheck(this, Sellnow);\n\n    _this = _super.call(this, props);\n    _this.onChangePetName = _this.onChangePetName.bind(_assertThisInitialized(_this));\n    _this.onChangePetTitle = _this.onChangePetTitle.bind(_assertThisInitialized(_this));\n    _this.onChangePetContact = _this.onChangePetContact.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      name: \"\",\n      title: \"\",\n      contact: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Sellnow, [{\n    key: \"onChangePetName\",\n    value: function onChangePetName(e) {\n      this.setState({\n        name: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangePetTitle\",\n    value: function onChangePetTitle(e) {\n      this.setState({\n        title: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangePetContact\",\n    value: function onChangePetContact(e) {\n      this.setState({\n        contact: e.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var petsObject = {\n        name: this.state.name,\n        title: this.state.title,\n        contact: this.state.contact\n      };\n      axios.post(\"https://localhost:3000/PetsBazar\", {\n        petsObject: petsObject\n      }).then(function (res) {\n        console.log(res.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        name: \"\",\n        title: \"\",\n        contact: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(ScrollView, {\n        nestedScrollEnabled: true,\n        showsVerticalScrollIndicator: false,\n        children: _jsx(View, {\n          style: styles.container,\n          children: _jsxs(View, {\n            style: styles.formContainer,\n            children: [_jsx(Text, {\n              style: styles.conText,\n              children: \"Please Fill the Below Form \"\n            }), _jsxs(View, {\n              style: styles.borderForm,\n              children: [_jsx(Text, {\n                style: styles.formText,\n                children: \"Your Name\"\n              }), _jsx(TextInput, {\n                style: styles.formInput,\n                multiline: true,\n                placeholder: \"Please Enter Your Name\",\n                value: this.state.name,\n                onChange: this.onChangePetName\n              }), _jsx(Text, {\n                style: styles.formText,\n                children: \"Category\"\n              }), _jsx(CategoryDropList, {}), _jsx(Text, {\n                style: styles.formText,\n                children: \"Pet/Product Title\"\n              }), _jsx(TextInput, {\n                style: styles.formInput,\n                placeholder: \"Enter Product Title\",\n                multiline: true,\n                value: this.state.title,\n                onChange: this.onChangePetTitle\n              }), _jsx(Text, {\n                style: styles.formText,\n                children: \"City\"\n              }), _jsx(CityDropList, {}), _jsx(Text, {\n                style: styles.formText,\n                children: \" Contact Number \"\n              }), _jsx(TextInput, {\n                style: styles.formInput,\n                multiline: true,\n                placeholder: \"Phone Number\",\n                inputType: \"number\",\n                value: this.state.contact,\n                onChange: this.onChangePetContact\n              }), _jsx(Text, {\n                style: styles.formText,\n                children: \"Price\"\n              }), _jsx(TextInput, {\n                style: styles.formInput,\n                multiline: true,\n                placeholder: \"Enter Price\"\n              }), _jsx(Text, {\n                style: styles.formText,\n                children: \"Image of Product\"\n              }), _jsx(ImagePickerExample, {}), _jsx(Text, {\n                style: styles.formText,\n                children: \"Description(Optional)\"\n              }), _jsx(TextInput, {\n                style: styles.descriptionInput,\n                multiline: true,\n                numberOfLines: 8,\n                placeholder: \"Describe your product\"\n              }), _jsx(TouchableOpacity, {\n                style: styles.btn,\n                onPress: this.onSubmit,\n                children: _jsx(Text, {\n                  style: styles.btnTxt,\n                  children: \"Submit\"\n                })\n              })]\n            })]\n          })\n        })\n      });\n    }\n  }]);\n\n  return Sellnow;\n}(Component);\n\nexport { Sellnow as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    height: \"auto\",\n    width: \"auto\"\n  },\n  sellText: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  formContainer: {\n    backgroundColor: \"#ff9933\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignSelf: \"center\"\n  },\n  conText: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    marginVertical: 10,\n    marginHorizontal: 15\n  },\n  formInput: {\n    height: 50,\n    fontSize: 18,\n    margin: 10,\n    width: 350,\n    borderWidth: 1,\n    borderColor: \"black\",\n    backgroundColor: \"white\",\n    textAlign: \"left\",\n    borderRadius: 10,\n    padding: 10\n  },\n  formText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"left\",\n    margin: 10\n  },\n  descriptionInput: {\n    height: 80,\n    margin: 10,\n    width: 340,\n    borderWidth: 1,\n    borderColor: \"black\",\n    backgroundColor: \"white\",\n    textAlign: \"left\",\n    borderRadius: 20,\n    padding: 10\n  },\n  borderForm: {\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#FF642E\",\n    margin: 7,\n    height: \"auto\",\n    width: \"auto\"\n  },\n  btn: {\n    margin: 15,\n    height: 35,\n    width: 120,\n    backgroundColor: \"#FF642E\",\n    borderRadius: 20,\n    alignSelf: \"center\"\n  },\n  btnTxt: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"white\",\n    margin: 5\n  },\n  dropdown: {\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: \"black\"\n  },\n  dropdownContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ff9933\",\n    padding: 8\n  }\n});","map":{"version":3,"sources":["E:/Development/React/petsbazar/Screens/Sellnow.js"],"names":["withRouter","React","Component","axios","ImagePickerExample","SelectDropdown","Constants","DropDownPicker","CategoryDropList","CityDropList","Sellnow","props","onChangePetName","bind","onChangePetTitle","onChangePetContact","onSubmit","state","name","title","contact","e","setState","target","value","preventDefault","petsObject","post","then","res","console","log","data","catch","error","styles","container","formContainer","conText","borderForm","formText","formInput","descriptionInput","btn","btnTxt","StyleSheet","create","flex","flexDirection","height","width","sellText","fontSize","fontWeight","textAlign","backgroundColor","alignSelf","marginVertical","marginHorizontal","margin","borderWidth","borderColor","borderRadius","padding","color","dropdown","dropdownContainer","flexWrap","justifyContent","paddingTop","statusBarHeight"],"mappings":"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","sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Picker,\r\n  Platform,\r\n} from \"react-native\";\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n//import { Dropdown } from \"react-native-material-dropdown\";\r\n//import { Icon } from \"react-native-elements\";\r\nimport ImagePickerExample from \"../components/CameraFunc\";\r\nimport SelectDropdown from \"react-native-select-dropdown\";\r\nimport Constants from \"expo-constants\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\nimport CategoryDropList from \"../constants/CategoryDropList\";\r\nimport CityDropList from \"../constants/CityDropList\";\r\n\r\nexport default class Sellnow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangePetName = this.onChangePetName.bind(this);\r\n    this.onChangePetTitle = this.onChangePetTitle.bind(this);\r\n    this.onChangePetContact = this.onChangePetContact.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    // State\r\n    this.state = {\r\n      name: \"\",\r\n      title: \"\",\r\n      contact: \"\",\r\n    };\r\n  }\r\n\r\n  /*componentDidMount() {\r\n    axios.get('http://localhost:3000/PetsBazar/pets/' )\r\n      .then(res => {\r\n        this.setState({\r\n          name: res.data.name,\r\n          title: res.data.title,\r\n          contact: res.data.contact\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }*/\r\n  onChangePetName(e) {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n  onChangePetTitle(e) {\r\n    this.setState({ title: e.target.value });\r\n  }\r\n  onChangePetContact(e) {\r\n    this.setState({ contact: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const petsObject = {\r\n      name: this.state.name,\r\n      title: this.state.title,\r\n      contact: this.state.contact,\r\n    };\r\n    /*axios.put('http://localhost:3000/pets/update-pets/' + petsObject)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        console.log('Pet successfully updated')\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      })\r\n    // Redirect to Student List \r\n    this.props.push('/pets-list')*/\r\n    //axios.post('http://localhost:4000/PetsBazar/pets', petsObject)\r\n\r\n    axios\r\n      .post(\r\n       // Platform.OS === \"android\"\r\n        //  ? \"http://10.0.2.2:3000/PetsBazar\"\r\n           \"https://localhost:3000/PetsBazar\",\r\n        {petsObject}\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    this.setState({ name: \"\", title: \"\", contact: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ScrollView\r\n        nestedScrollEnabled={true}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        <View style={styles.container}>\r\n          <View style={styles.formContainer}>\r\n            <Text style={styles.conText}>Please Fill the Below Form </Text>\r\n\r\n            <View style={styles.borderForm}>\r\n              <Text style={styles.formText}>Your Name</Text>\r\n              <TextInput\r\n                style={styles.formInput}\r\n                multiline\r\n                placeholder=\"Please Enter Your Name\"\r\n                value={this.state.name}\r\n                onChange={this.onChangePetName}\r\n              />\r\n\r\n              <Text style={styles.formText}>Category</Text>\r\n\r\n              <CategoryDropList />\r\n\r\n              <Text style={styles.formText}>Pet/Product Title</Text>\r\n              <TextInput\r\n                style={styles.formInput}\r\n                placeholder=\"Enter Product Title\"\r\n                multiline\r\n                value={this.state.title}\r\n                onChange={this.onChangePetTitle}\r\n              />\r\n\r\n              <Text style={styles.formText}>City</Text>\r\n\r\n              <CityDropList />\r\n\r\n              <Text style={styles.formText}> Contact Number </Text>\r\n              <TextInput\r\n                style={styles.formInput}\r\n                multiline\r\n                placeholder=\"Phone Number\"\r\n                inputType=\"number\"\r\n                value={this.state.contact}\r\n                onChange={this.onChangePetContact}\r\n              />\r\n              <Text style={styles.formText}>Price</Text>\r\n              <TextInput\r\n                style={styles.formInput}\r\n                multiline\r\n                placeholder=\"Enter Price\"\r\n              />\r\n              <Text style={styles.formText}>Image of Product</Text>\r\n              <ImagePickerExample />\r\n              <Text style={styles.formText}>Description(Optional)</Text>\r\n              <TextInput\r\n                style={styles.descriptionInput}\r\n                multiline\r\n                numberOfLines={8}\r\n                placeholder=\"Describe your product\"\r\n              />\r\n              <TouchableOpacity style={styles.btn} onPress={this.onSubmit}>\r\n                <Text style={styles.btnTxt}>Submit</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\n//export default withRouter(Sellnow);\r\n\r\nvar styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    height: \"auto\",\r\n    width: \"auto\",\r\n  },\r\n\r\n  sellText: {\r\n    fontSize: 35,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  formContainer: {\r\n    backgroundColor: \"#ff9933\",\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    alignSelf: \"center\",\r\n  },\r\n  conText: {\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"left\",\r\n    marginVertical: 10,\r\n    marginHorizontal: 15,\r\n  },\r\n\r\n  formInput: {\r\n    //flex:1,\r\n    height: 50,\r\n    // marginLeft:7,\r\n    //marginRight:7,\r\n    fontSize: 18,\r\n    margin: 10,\r\n    width: 350,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    backgroundColor: \"white\",\r\n    textAlign: \"left\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  formText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"left\",\r\n    margin: 10,\r\n  },\r\n  descriptionInput: {\r\n    height: 80,\r\n    margin: 10,\r\n    width: 340,\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    backgroundColor: \"white\",\r\n    textAlign: \"left\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n  },\r\n  borderForm: {\r\n    alignSelf: \"center\",\r\n    borderWidth: 1,\r\n    borderColor: \"#FF642E\",\r\n    margin: 7,\r\n\r\n    height: \"auto\",\r\n    width: \"auto\",\r\n  },\r\n  btn: {\r\n    margin: 15,\r\n    height: 35,\r\n    width: 120,\r\n    backgroundColor: \"#FF642E\",\r\n    borderRadius: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n  btnTxt: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    margin: 5,\r\n  },\r\n  dropdown: {\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n  },\r\n  dropdownContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    alignSelf: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: \"#ff9933\",\r\n    padding: 8,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}