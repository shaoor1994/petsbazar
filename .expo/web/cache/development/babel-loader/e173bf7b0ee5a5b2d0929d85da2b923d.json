{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CategoryDropList = function (_Component) {\n  _inherits(CategoryDropList, _Component);\n\n  var _super = _createSuper(CategoryDropList);\n\n  function CategoryDropList() {\n    var _this;\n\n    _classCallCheck(this, CategoryDropList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedcat: \"\",\n      category: [{\n        itemName: \"Pets\"\n      }, {\n        itemName: \"Pets Food\"\n      }, {\n        itemName: \"Pets Products\"\n      }, {\n        itemName: \"Pets Accessories\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(CategoryDropList, [{\n    key: \"onValueChangeCat\",\n    value: function onValueChangeCat(value) {\n      return _regeneratorRuntime.async(function onValueChangeCat$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setState({\n                selectedcat: value\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.viewStyle,\n        children: [_jsx(View, {\n          style: {\n            flex: 0.3\n          }\n        }), _jsx(View, {\n          style: {\n            flex: 0.7,\n            fontSize: 14\n          },\n          children: _jsx(Picker, {\n            itemStyle: styles.itemStyle,\n            mode: \"dropdown\",\n            style: styles.pickerStyle,\n            selectedValue: this.state.selectedcat,\n            onValueChange: this.onValueChangeCat.bind(this),\n            children: this.state.category.map(function (item, index) {\n              return _jsx(Picker.Item, {\n                color: \"black\",\n                label: item.itemName,\n                value: item.itemName,\n                index: index\n              });\n            })\n          })\n        })]\n      });\n    }\n  }]);\n\n  return CategoryDropList;\n}(Component);\n\nexport { CategoryDropList as default };\nvar styles = StyleSheet.create({\n  viewStyle: {\n    alignSelf: \"center\",\n    flexDirection: \"row\",\n    width: \"99%\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n    borderWidth: 1,\n    height: '5%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    margin: 7\n  },\n  itemStyle: {\n    fontSize: 10,\n    fontFamily: \"Roboto-Regular\",\n    color: \"black\"\n  },\n  pickerStyle: {\n    width: \"140%\",\n    height: 40,\n    color: \"black\",\n    fontSize: 14,\n    fontFamily: \"Roboto-Regular\",\n    marginLeft: -100\n  },\n  textStyle: {\n    fontSize: 14,\n    fontFamily: \"Roboto-Regular\"\n  }\n});","map":{"version":3,"sources":["E:/Development/React/petsbazar/constants/CategoryDropList.js"],"names":["React","Component","CategoryDropList","state","selectedcat","category","itemName","value","setState","styles","viewStyle","flex","fontSize","itemStyle","pickerStyle","onValueChangeCat","bind","map","item","index","StyleSheet","create","alignSelf","flexDirection","width","justifyContent","alignItems","borderWidth","height","backgroundColor","borderRadius","margin","fontFamily","color","marginLeft","textStyle"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;IAGqBC,gB;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,QAAQ,EAAE;AADZ,OADQ,EAIR;AACEA,QAAAA,QAAQ,EAAE;AADZ,OAJQ,EAOR;AACEA,QAAAA,QAAQ,EAAE;AADZ,OAPQ,EAUR;AACEA,QAAAA,QAAQ,EAAE;AADZ,OAVQ;AAFJ,K;;;;;;WAkBR,0BAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA;AACE,mBAAKC,QAAL,CAAc;AAAEJ,gBAAAA,WAAW,EAAEG;AAAf,eAAd;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAIA,kBAAS;AACP,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAAb,UADF,EAIE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEA,YAAAA,IAAI,EAAE,GAAR;AAAaC,YAAAA,QAAQ,EAAE;AAAvB,WAAb;AAAA,oBACE,KAAC,MAAD;AAEE,YAAA,SAAS,EAAEH,MAAM,CAACI,SAFpB;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAEJ,MAAM,CAACK,WAJhB;AAKE,YAAA,aAAa,EAAE,KAAKX,KAAL,CAAWC,WAL5B;AAME,YAAA,aAAa,EAAE,KAAKW,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CANjB;AAAA,sBASG,KAAKb,KAAL,CAAWE,QAAX,CAAoBY,GAApB,CAAwB,UAACC,IAAD,EAAOC,KAAP;AAAA,qBACvB,KAAC,MAAD,CAAQ,IAAR;AAEE,gBAAA,KAAK,EAAC,OAFR;AAGE,gBAAA,KAAK,EAAED,IAAI,CAACZ,QAHd;AAIE,gBAAA,KAAK,EAAEY,IAAI,CAACZ,QAJd;AAKE,gBAAA,KAAK,EAAEa;AALT,gBADuB;AAAA,aAAxB;AATH;AADF,UAJF;AAAA,QADF;AA4BD;;;;EApD2ClB,S;;SAAzBC,gB;AAuDrB,IAAMO,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AAETY,IAAAA,SAAS,EAAE,QAFF;AAGTC,IAAAA,aAAa,EAAE,KAHN;AAITC,IAAAA,KAAK,EAAE,KAJE;AAKTC,IAAAA,cAAc,EAAE,eALP;AAMTC,IAAAA,UAAU,EAAE,YANH;AAOTC,IAAAA,WAAW,EAAC,CAPH;AAQTC,IAAAA,MAAM,EAAC,IARE;AASTC,IAAAA,eAAe,EAAC,OATP;AAUTC,IAAAA,YAAY,EAAC,EAVJ;AAWTC,IAAAA,MAAM,EAAC;AAXE,GADoB;AAc/BlB,EAAAA,SAAS,EAAE;AACTD,IAAAA,QAAQ,EAAE,EADD;AAEToB,IAAAA,UAAU,EAAE,gBAFH;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAdoB;AAsB/BnB,EAAAA,WAAW,EAAE;AACXU,IAAAA,KAAK,EAAE,MADI;AAEXI,IAAAA,MAAM,EAAE,EAFG;AAGXK,IAAAA,KAAK,EAAE,OAHI;AAIXrB,IAAAA,QAAQ,EAAE,EAJC;AAKXoB,IAAAA,UAAU,EAAE,gBALD;AAMXE,IAAAA,UAAU,EAAC,CAAC;AAND,GAtBkB;AA+B/BC,EAAAA,SAAS,EAAE;AACTvB,IAAAA,QAAQ,EAAE,EADD;AAEToB,IAAAA,UAAU,EAAE;AAFH;AA/BoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Picker, View, Text, StyleSheet } from \"react-native\";\r\n\r\nexport default class CategoryDropList extends Component {\r\n  state = {\r\n    selectedcat: \"\",\r\n    category: [\r\n      {\r\n        itemName: \"Pets\"\r\n      },\r\n      {\r\n        itemName: \"Pets Food\"\r\n      },\r\n      {\r\n        itemName: \"Pets Products\"\r\n      },\r\n      {\r\n        itemName: \"Pets Accessories\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  async onValueChangeCat(value) {\r\n    this.setState({ selectedcat: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.viewStyle}>\r\n        <View style={{ flex: 0.3 }}>\r\n          {/*<Text style={styles.textStyle}>Categories</Text>*/}\r\n        </View>\r\n        <View style={{ flex: 0.7, fontSize: 14 }}>\r\n          <Picker\r\n          \r\n            itemStyle={styles.itemStyle}\r\n            mode=\"dropdown\"\r\n            style={styles.pickerStyle}\r\n            selectedValue={this.state.selectedcat}\r\n            onValueChange={this.onValueChangeCat.bind(this)}\r\n        \r\n          >\r\n            {this.state.category.map((item, index) => (\r\n              <Picker.Item\r\n               \r\n                color=\"black\"\r\n                label={item.itemName}\r\n                value={item.itemName}\r\n                index={index}\r\n              />\r\n            ))}\r\n          </Picker>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  viewStyle: {\r\n   // flex: 1,\r\n    alignSelf: \"center\",\r\n    flexDirection: \"row\",\r\n    width: \"99%\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"flex-start\",\r\n    borderWidth:1,\r\n    height:'5%',\r\n    backgroundColor:'white',\r\n    borderRadius:10,\r\n    margin:7\r\n  },\r\n  itemStyle: {\r\n    fontSize: 10,\r\n    fontFamily: \"Roboto-Regular\",\r\n    color: \"black\",\r\n    \r\n    \r\n    \r\n  },\r\n  pickerStyle: {\r\n    width: \"140%\",\r\n    height: 40,\r\n    color: \"black\",\r\n    fontSize: 14,\r\n    fontFamily: \"Roboto-Regular\",\r\n    marginLeft:-100\r\n\r\n},\r\n  textStyle: {\r\n    fontSize: 14,\r\n    fontFamily: \"Roboto-Regular\",\r\n\r\n    \r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}