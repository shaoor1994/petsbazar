{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Icon } from 'react-native-elements';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Swiper from \"react-native-web-swiper\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport PetsScreen from \"../components/Pets\";\nimport FoodScreen from \"../components/Food\";\nimport AccessoriesScreen from \"../components/Accessories\";\nimport FeaturedPets from \"../components/FeaturedPets\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.mainView,\n        children: _jsxs(ScrollView, {\n          showsVerticalScrollIndicator: false,\n          nestedScrollEnabled: true,\n          children: [_jsx(View, {\n            style: styles.slider,\n            children: _jsxs(Swiper, {\n              nestedScrollEnabled: true,\n              horizantal: true,\n              loop: true,\n              timeout: -2.5,\n              controlsProps: {\n                dotActiveStyle: {\n                  backgroundColor: 'red'\n                },\n                nextTitle: null,\n                prevTitle: null,\n                cellsContent: {}\n              },\n              children: [_jsx(View, {\n                style: styles.imgContainer,\n                children: _jsx(Image, {\n                  style: styles.images,\n                  source: require(\"../assets/Slider.jpg\")\n                })\n              }), _jsx(View, {\n                style: styles.imgContainer,\n                children: _jsx(Image, {\n                  style: styles.images,\n                  source: require(\"../assets/slide2.jpeg\")\n                })\n              })]\n            })\n          }), _jsxs(View, {\n            style: styles.petsView,\n            children: [_jsx(Text, {\n              style: styles.sliderViewStatictText,\n              children: \"Pets\"\n            }), _jsx(PetsScreen, {})]\n          }), _jsxs(View, {\n            style: styles.FoodsView,\n            children: [_jsx(Text, {\n              style: styles.sliderViewStatictText,\n              children: \"Food\"\n            }), _jsx(FoodScreen, {})]\n          }), _jsxs(View, {\n            style: styles.AccessoriesView,\n            children: [_jsx(Text, {\n              style: styles.accessoriesStatictText,\n              children: \"Accessories\"\n            }), _jsx(AccessoriesScreen, {})]\n          }), _jsxs(View, {\n            style: styles.featuredPetsView,\n            children: [_jsx(Text, {\n              style: styles.featuredPetsStaticText,\n              children: \"Featured Pets\"\n            }), _jsx(FeaturedPets, {})]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  mainView: {\n    flex: 1,\n    flexDirection: 'column',\n    width: '100%'\n  },\n  images: {\n    width: '100%',\n    height: '100%',\n    resizeMode: \"cover\"\n  },\n  imgContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    height: 'auto'\n  },\n  verrticalImage: {\n    height: 275,\n    width: 375,\n    resizeMode: 'stretch',\n    marginTop: 73,\n    marginLeft: -115,\n    marginBottom: 30\n  },\n  foodImage: {\n    height: 200,\n    width: 230,\n    resizeMode: 'contain',\n    marginTop: 95,\n    paddingRight: 90,\n    paddingLeft: 0,\n    aspectRatio: 1.5,\n    marginLeft: -65,\n    marginBottom: 60\n  },\n  accessoriesImage: {\n    height: 200,\n    width: 270,\n    resizeMode: 'stretch',\n    marginTop: 100,\n    marginLeft: -45,\n    marginBottom: 30\n  },\n  slider: {\n    flexDirection: 'column',\n    height: '20%',\n    marginBottom: '3.5%',\n    position: 'relative',\n    padding: 0\n  },\n  opacityView: {\n    paddingLeft: 60,\n    paddingRight: 60,\n    flexDirection: 'row',\n    alignContent: 'flex-start',\n    justifyContent: 'center',\n    alignContent: 'stretch',\n    marginTop: -10,\n    marginBottom: 20,\n    alignContent: 'flex-start',\n    display: 'flex',\n    resizeMode: 'cover'\n  },\n  verticalOpacity: {\n    height: 200,\n    width: 170,\n    alignContent: 'stretch',\n    flexWrap: 'wrap',\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  },\n  horizantalOpacity: {\n    flex: 1,\n    height: 100,\n    paddingBottom: 10,\n    marginRight: -20,\n    width: 170,\n    borderRadius: 30,\n    alignContent: 'center',\n    justifyContent: 'center'\n  },\n  dualOpacityView: {\n    flexDirection: 'column',\n    paddingLeft: 10,\n    justifyContent: 'space-around'\n  },\n  petsView: {\n    marginTop: 35,\n    flexDirection: 'column',\n    marginBottom: -30,\n    height: 200,\n    width: Dimensions.get('screen').width\n  },\n  sliderViewStatictText: {\n    justifyContent: 'center',\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginLeft: '1.5%',\n    marginRight: '80%'\n  },\n  FoodsView: {\n    marginTop: 20,\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: -25\n  },\n  AccessoriesView: {\n    marginTop: 35,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  accessoriesStatictText: {\n    justifyContent: 'center',\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginLeft: 0,\n    marginRight: '60%'\n  },\n  featuredPetsView: {\n    marginTop: 10,\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 35\n  },\n  featuredPetsStaticText: {\n    justifyContent: 'center',\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginLeft: 0,\n    marginRight: '56%'\n  },\n  petsArrayView: {\n    flex: 1,\n    height: 300,\n    width: Dimensions.get('screen').width,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  petsImageOpacity: {\n    backgroundColor: 'red',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["E:/Development/React/petsbazar/Screens/Home.js"],"names":["React","Component","Icon","Swiper","ScrollView","PetsScreen","FoodScreen","AccessoriesScreen","FeaturedPets","HomeScreen","styles","mainView","slider","dotActiveStyle","backgroundColor","nextTitle","prevTitle","cellsContent","imgContainer","images","require","petsView","sliderViewStatictText","FoodsView","AccessoriesView","accessoriesStatictText","featuredPetsView","featuredPetsStaticText","StyleSheet","create","flex","flexDirection","width","height","resizeMode","alignItems","justifyContent","verrticalImage","marginTop","marginLeft","marginBottom","foodImage","paddingRight","paddingLeft","aspectRatio","accessoriesImage","position","padding","opacityView","alignContent","display","verticalOpacity","flexWrap","horizantalOpacity","paddingBottom","marginRight","borderRadius","dualOpacityView","Dimensions","get","fontSize","fontWeight","petsArrayView","petsImageOpacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Icon} from 'react-native-elements'\r\n\r\nimport {\r\n    Image,\r\n    View,\r\n    Dimensions,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Text,\r\n\r\n} from 'react-native';\r\n\r\nimport Swiper from \"react-native-web-swiper\";\r\n//import { Swiper} from 'react-native-gesture-handler'\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n//import ArrayCode from '../components/ArrayCode';\r\nimport PetsScreen from '../components/Pets';\r\nimport FoodScreen from '../components/Food';\r\nimport AccessoriesScreen from '../components/Accessories';\r\nimport FeaturedPets from '../components/FeaturedPets';\r\n\r\nexport default class HomeScreen extends Component {\r\n      \r\n    render() {\r\n\r\n        return (\r\n            <View style={styles.mainView}>\r\n                <ScrollView showsVerticalScrollIndicator={false}\r\n                    nestedScrollEnabled={true} >\r\n\r\n                    <View style={styles.slider}>\r\n                        <Swiper\r\n                            nestedScrollEnabled={true}\r\n                            horizantal\r\n                            loop\r\n                            \r\n                            \r\n                            timeout={-2.5}\r\n                            controlsProps={{\r\n                                dotActiveStyle: { backgroundColor: 'red' },\r\n                                nextTitle:null,\r\n                                prevTitle:null,\r\n                                cellsContent: {\r\n                                    //'bottom-left': (<Text>SOME LOGO</Text>),\r\n                                }\r\n                            }}\r\n                        >\r\n                            <View style={styles.imgContainer}>\r\n\r\n                                <Image style={styles.images} source={require('../assets/Slider.jpg')} />\r\n                            </View>\r\n                            <View style={styles.imgContainer}>\r\n                                <Image style={styles.images} source={require('../assets/slide2.jpeg')} />\r\n                            </View>\r\n\r\n                        </Swiper>\r\n                    </View>\r\n\r\n                    {/* Adding view for lager touchableopacity */}\r\n\r\n                   {/* <View style={styles.opacityView} >\r\n                        <TouchableOpacity  >\r\n\r\n                            <View style={styles.verticalOpacity}>\r\n                                <Image style={styles.verrticalImage}\r\n                                    source={require('../assets/vertical_imageupdated.png')} />\r\n                            </View>\r\n                        </TouchableOpacity>\r\n\r\n                        {/* adding view to aligh items vertically }\r\n\r\n                        <View style={styles.dualOpacityView}>\r\n                            <TouchableOpacity onPress={()=>this.props.navigation.navigate('FoodScreenHome')}>\r\n\r\n                                <View style={styles.horizantalOpacity}>\r\n                                    <Image style={styles.foodImage}\r\n\r\n                                        source={require('../assets/Food_Horizantal_Img.png')}\r\n\r\n                                    />\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={()=>this.props.navigation.navigate('AccessoriesScreenHome')}>\r\n\r\n                                <View style={styles.horizantalOpacity}>\r\n                                    <Image\r\n                                        style={styles.accessoriesImage}\r\n                                        source={require('../assets/Accessories_Horizantal_img.png')}\r\n\r\n                                    />\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        \r\n\r\n\r\n                    </View>\r\n                    {/* Pets View */}\r\n                    <View style={styles.petsView}  >\r\n\r\n                        <Text style={styles.sliderViewStatictText}>Pets</Text>\r\n                        \r\n\r\n\r\n                     {   /*<View style={styles.petsArrayView}>*/ }\r\n\r\n\r\n\r\n\r\n                            {<PetsScreen />}\r\n\r\n                        {/*</View>*/}\r\n\r\n                    </View>\r\n                    {/* Foods View */}\r\n                    <View style={styles.FoodsView}  >\r\n\r\n                        <Text style={styles.sliderViewStatictText}>Food</Text>\r\n                        {<FoodScreen/>}\r\n                    </View>\r\n                    {/* Accessories View */}\r\n                    <View style={styles.AccessoriesView}  >\r\n\r\n                        <Text style={styles.accessoriesStatictText}>Accessories</Text>\r\n                        {<AccessoriesScreen/>}\r\n                    </View>\r\n                    { /* Featured Pets View */}\r\n                    <View style={styles.featuredPetsView}  >\r\n\r\n                        <Text style={styles.featuredPetsStaticText}>Featured Pets</Text>\r\n                        {<FeaturedPets/>}\r\n\r\n\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nvar styles = StyleSheet.create({\r\n\r\n    mainView: {\r\n        flex: 1,\r\n        /*alignContent:'flex-start' ,*/\r\n        flexDirection: 'column',\r\n        //height:Dimensions.get('window').height,\r\n        //width:Dimensions.get('window').width,\r\n        width: '100%'\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n    images: {\r\n        width: '100%',\r\n        height: '100%',\r\n        resizeMode: \"cover\"\r\n    },\r\n\r\n    imgContainer: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"white\",\r\n        height: 'auto'\r\n    },\r\n    verrticalImage: {\r\n\r\n        //width:'null',\r\n        //height:'null',\r\n        height: 275,\r\n        width: 375,\r\n        resizeMode: 'stretch',\r\n        marginTop: 73,\r\n        marginLeft: -115,\r\n        marginBottom: 30,\r\n    },\r\n    foodImage: {\r\n\r\n        height: 200,\r\n        width: 230,\r\n        resizeMode: 'contain',\r\n        marginTop: 95,\r\n        paddingRight: 90,\r\n        paddingLeft: 0,\r\n        aspectRatio: 1.5,\r\n        //paddingLeft:80,\r\n        marginLeft: -65,\r\n        // marginRight:-65,\r\n        marginBottom: 60,\r\n    },\r\n    accessoriesImage: {\r\n\r\n        //width:'null',\r\n        //height:'null',\r\n        height: 200,\r\n        width: 270,\r\n        resizeMode: 'stretch',\r\n        marginTop: 100,\r\n        marginLeft: -45,\r\n        marginBottom: 30,\r\n    },\r\n\r\n    slider: {\r\n        flexDirection: 'column',\r\n        height: '20%',\r\n        marginBottom: '3.5%',\r\n        position: 'relative',\r\n        padding: 0\r\n    },\r\n\r\n    opacityView: {\r\n\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        flexDirection: 'row',\r\n        //alignItems:'flex-start',\r\n        alignContent: 'flex-start',\r\n        justifyContent: 'center',\r\n        alignContent: 'stretch',\r\n        marginTop: -10,\r\n        marginBottom:20,\r\n        alignContent: 'flex-start',\r\n        display: 'flex',\r\n        resizeMode: 'cover'\r\n\r\n\r\n    },\r\n\r\n    verticalOpacity: {\r\n        height: 200,\r\n        width: 170,\r\n        //borderRadius:30, \r\n        alignContent: 'stretch',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'stretch',\r\n        //backgroundColor:'#8B0000',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n\r\n    horizantalOpacity: {\r\n        flex: 1,\r\n        height: 100,\r\n        paddingBottom: 10,\r\n        marginRight: -20,\r\n        width: 170,\r\n        borderRadius: 30,\r\n        alignContent: 'center',\r\n        //backgroundColor: '#464643',\r\n        justifyContent: 'center'\r\n    },\r\n\r\n    dualOpacityView: {\r\n\r\n        flexDirection: 'column',\r\n        paddingLeft: 10,\r\n        justifyContent: 'space-around'\r\n    },\r\n\r\n    petsView: {\r\n        marginTop: 35,\r\n        \r\n        //marginBottom:20,\r\n        flexDirection: 'column',\r\n        marginBottom:-30,\r\n        //alignItems:'center',\r\n        height: 200,\r\n        width: Dimensions.get('screen').width\r\n        //marginRight:50,\r\n        //alignContent: 'center',\r\n        //justifyContent: 'center',\r\n        //justifyContent:'flex-start',\r\n        // height:Dimensions.get('screen').height,\r\n        //width:Dimensions.get('screen').width,\r\n\r\n\r\n\r\n    },\r\n    sliderViewStatictText: {\r\n        justifyContent: 'center',\r\n        fontSize: 25,\r\n        fontWeight: 'bold',\r\n        marginLeft: '1.5%',\r\n        marginRight: '80%'\r\n\r\n\r\n\r\n    },\r\n    FoodsView: {\r\n        marginTop: 20,\r\n        flexDirection: 'column',\r\n        //marginRight:50,\r\n        //alignContent: 'center',\r\n        //justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom:-25\r\n\r\n    },\r\n\r\n    AccessoriesView: {\r\n        marginTop: 35,\r\n        flexDirection: 'column',\r\n        //marginRight:50,\r\n        //alignContent: 'center',\r\n        //justifyContent: 'center',\r\n        alignItems: 'center'\r\n\r\n    },\r\n    accessoriesStatictText: {\r\n        justifyContent: 'center',\r\n        fontSize: 25,\r\n        fontWeight: 'bold',\r\n        marginLeft: 0,\r\n        marginRight: '60%'\r\n\r\n\r\n    },\r\n\r\n    featuredPetsView: {\r\n\r\n        marginTop: 10,\r\n        flexDirection: 'column',\r\n        //marginRight:50,\r\n        //alignContent: 'center',\r\n        //justifyContent: 'center',\r\n        alignItems: 'center',\r\n        \r\n        marginBottom:35\r\n\r\n    },\r\n\r\n    featuredPetsStaticText: {\r\n\r\n        justifyContent: 'center',\r\n        fontSize: 25,\r\n        fontWeight: 'bold',\r\n        marginLeft: 0,\r\n        marginRight: '56%'\r\n\r\n    },\r\n    petsArrayView: {\r\n        //height:'100%',\r\n        //width:'100%',\r\n        flex: 1,\r\n        height: 300,\r\n        width: Dimensions.get('screen').width,\r\n        flexDirection: 'row',\r\n        alignItems:'center'\r\n        //backgroundColor:'black'\r\n\r\n\r\n    },\r\n    petsImageOpacity: {\r\n\r\n        backgroundColor: 'red',\r\n        //height:'100%',\r\n        //width:\"100%\",\r\n        flexDirection: 'row'\r\n\r\n    }\r\n\r\n\r\n\r\n});"]},"metadata":{},"sourceType":"module"}