{"ast":null,"code":"'use strict';\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Launch } from \"./launcher\";\nimport _ from 'lodash';\nvar EMAIL = 'mailto:';\n\nvar Email = function Email() {\n  var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var subject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var cc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var bcc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  return new Promise(function (resolve, reject) {\n    var url = EMAIL;\n    var params = [];\n\n    if (to) {\n      url += encodeURIComponent(_.isArray(to) ? to.join(\",\") : to);\n    }\n\n    if (cc) {\n      params.push('cc=' + encodeURIComponent(_.isArray(cc) ? cc.join(\",\") : cc));\n    }\n\n    if (bcc) {\n      params.push('bcc=' + encodeURIComponent(_.isArray(bcc) ? bcc.join(\",\") : bcc));\n    }\n\n    if (subject) {\n      params.push('subject=' + encodeURIComponent(subject));\n    }\n\n    if (body) {\n      params.push('body=' + encodeURIComponent(body));\n    }\n\n    if (params.length > 0) {\n      url += \"?\" + params.join(\"&\");\n    }\n\n    Launch(url).then(function () {\n      return resolve();\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\n\nexport { Email };","map":{"version":3,"sources":["E:/Development/React/petsbazar/node_modules/react-native-openanything/src/email.js"],"names":["Launch","_","EMAIL","Email","to","subject","body","cc","bcc","Promise","resolve","reject","url","params","encodeURIComponent","isArray","join","push","length","then","catch","error"],"mappings":"AAAA;;;AAMA,SACIA,MADJ;AAIA,OAAOC,CAAP,MAAc,QAAd;AAKA,IAAMC,KAAK,GAAG,SAAd;;AAYA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAwE;AAAA,MAAvEC,EAAuE,uEAAlE,KAAkE;AAAA,MAA3DC,OAA2D,uEAAjD,KAAiD;AAAA,MAA1CC,IAA0C,uEAAnC,KAAmC;AAAA,MAA5BC,EAA4B,uEAAvB,KAAuB;AAAA,MAAhBC,GAAgB,uEAAV,KAAU;AAElF,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAIC,GAAG,GAAGV,KAAV;AACA,QAAIW,MAAM,GAAG,EAAb;;AAEA,QAAGT,EAAH,EAAO;AACHQ,MAAAA,GAAG,IAAIE,kBAAkB,CAACb,CAAC,CAACc,OAAF,CAAUX,EAAV,IAAgBA,EAAE,CAACY,IAAH,CAAQ,GAAR,CAAhB,GAA+BZ,EAAhC,CAAzB;AACH;;AAED,QAAGG,EAAH,EAAO;AACHM,MAAAA,MAAM,CAACI,IAAP,CAAY,QAAQH,kBAAkB,CAACb,CAAC,CAACc,OAAF,CAAUR,EAAV,IAAgBA,EAAE,CAACS,IAAH,CAAQ,GAAR,CAAhB,GAA+BT,EAAhC,CAAtC;AACH;;AAED,QAAGC,GAAH,EAAQ;AACJK,MAAAA,MAAM,CAACI,IAAP,CAAY,SAASH,kBAAkB,CAACb,CAAC,CAACc,OAAF,CAAUP,GAAV,IAAiBA,GAAG,CAACQ,IAAJ,CAAS,GAAT,CAAjB,GAAiCR,GAAlC,CAAvC;AACH;;AAED,QAAGH,OAAH,EAAY;AACRQ,MAAAA,MAAM,CAACI,IAAP,CAAY,aAAaH,kBAAkB,CAACT,OAAD,CAA3C;AACH;;AAED,QAAGC,IAAH,EAAS;AACLO,MAAAA,MAAM,CAACI,IAAP,CAAY,UAAUH,kBAAkB,CAACR,IAAD,CAAxC;AACH;;AAED,QAAGO,MAAM,CAACK,MAAP,GAAgB,CAAnB,EAAsB;AAClBN,MAAAA,GAAG,IAAI,MAAMC,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAb;AACH;;AAEDhB,IAAAA,MAAM,CAACY,GAAD,CAAN,CAAYO,IAAZ,CAAiB;AAAA,aAAMT,OAAO,EAAb;AAAA,KAAjB,EAAkCU,KAAlC,CAAwC,UAAAC,KAAK;AAAA,aAAIV,MAAM,CAACU,KAAD,CAAV;AAAA,KAA7C;AACH,GA9BM,CAAP;AA+BH,CAjCD;;AAuCA,SACIlB,KADJ","sourcesContent":["'use strict';\n\nimport {\n    Platform\n} from 'react-native';\n\nimport {\n    Launch\n} from './launcher';\n\nimport _ from 'lodash';\n\n/**\n * @type {string}\n */\nconst EMAIL = 'mailto:';\n\n\n/**\n * Launches an email request\n * @param to\n * @param subject\n * @param body\n * @param cc\n * @param bcc\n * @returns {Promise}\n */\nconst Email = (to = false, subject = false, body = false, cc = false, bcc = false) => {\n\n    return new Promise((resolve, reject) => {\n\n        let url = EMAIL;\n        let params = [];\n\n        if(to) {\n            url += encodeURIComponent(_.isArray(to) ? to.join(\",\") : to);\n        }\n\n        if(cc) {\n            params.push('cc=' + encodeURIComponent(_.isArray(cc) ? cc.join(\",\") : cc));\n        }\n\n        if(bcc) {\n            params.push('bcc=' + encodeURIComponent(_.isArray(bcc) ? bcc.join(\",\") : bcc));\n        }\n\n        if(subject) {\n            params.push('subject=' + encodeURIComponent(subject));\n        }\n\n        if(body) {\n            params.push('body=' + encodeURIComponent(body));\n        }\n\n        if(params.length > 0) {\n            url += \"?\" + params.join(\"&\");\n        }\n\n        Launch(url).then(() => resolve()).catch(error => reject(error));\n    });\n}\n\n\n/**\n * @exports\n */\nexport {\n    Email\n}"]},"metadata":{},"sourceType":"module"}